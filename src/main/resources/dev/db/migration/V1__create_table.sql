create table if not exists addresses
(
    address_id bigint generated by default as identity
        primary key,
    city       varchar(255),
    district   varchar(255),
    street     varchar(255)
);

alter table addresses
    owner to postgres;

create table if not exists categories
(
    category_id     bigint generated by default as identity
        primary key,
    category_name   varchar(255) not null
        unique,
    category_status varchar(255) not null
        constraint categories_category_status_check
            check ((category_status)::text = ANY
                   ((ARRAY ['ACTIVE'::character varying, 'INACTIVE'::character varying])::text[]))
);

alter table categories
    owner to postgres;

create table if not exists colors
(
    color_id   bigint generated by default as identity
        primary key,
    color_name varchar(255) not null
        unique,
    color_hex varchar(25) not null
        unique
);

alter table colors
    owner to postgres;

create table if not exists notifications
(
    notification_date timestamp(6),
    notification_id   bigint generated by default as identity
        primary key,
    content           text not null
        unique,
    scope             varchar(255)
        constraint notifications_scope_check
            check ((scope)::text = ANY ((ARRAY ['ALL'::character varying, 'FOR_USER'::character varying])::text[]))
);

alter table notifications
    owner to postgres;

create table if not exists providers
(
    address_id      bigint
        unique
        constraint fkipcqyoewj5y5mkrbmdm8d9cf9
            references addresses,
    provider_id     bigint generated by default as identity
        primary key,
    phone_number    varchar(10)
        unique,
    email           varchar(255)
        unique,
    provider_name   varchar(255)
        unique,
    provider_status varchar(255) not null
        constraint providers_provider_status_check
            check ((provider_status)::text = ANY
                   ((ARRAY ['ACTIVE'::character varying, 'INACTIVE'::character varying])::text[]))
);

alter table providers
    owner to postgres;

create table if not exists products
(
    avg_rating       decimal(10, 1),
    buy_quantity     integer,
    number_of_rating integer,
    price            decimal(10, 2),
    total_quantity   integer,
    category_id      bigint
        constraint fkog2rp4qthbtt2lfyhfo32lsw9
            references categories,
    created_at       timestamp(6),
    product_id       bigint generated by default as identity
        primary key,
    provider_id      bigint
        constraint fktltawi3myjt9pi09219eiou1o
            references providers,
    updated_at       timestamp(6),
    description      text,
    product_name     varchar(255) not null
        unique,
    product_status   varchar(255)
        constraint products_product_status_check
            check ((product_status)::text = ANY
                   ((ARRAY ['ACTIVE'::character varying, 'INACTIVE'::character varying])::text[])),
    thumbnail        varchar(255)
);

alter table products
    owner to postgres;

create table if not exists product_images
(
    product_id       bigint not null
        constraint fkqnq71xsohugpqwf3c9gxmsuy
            references products,
    product_image_id bigint generated by default as identity
        primary key,
    path             varchar(255)
);

alter table product_images
    owner to postgres;

create table if not exists product_prices
(
    discount          real,
    discounted_amount decimal(10, 2),
    discounted_price  decimal(10, 2),
    expired_date      timestamp(6),
    product_id        bigint not null
        constraint fko21ew0lemtpkoyly3vm1mq925
            references products,
    product_price_id  bigint generated by default as identity
        primary key,
    note              text
);

alter table product_prices
    owner to postgres;

create table if not exists sizes
(
    number_size smallint
        unique,
    size_id     bigint generated by default as identity
        primary key,
    text_size   varchar(10)
        unique,
    size_type   varchar(255)
        constraint sizes_size_type_check
            check ((size_type)::text = ANY ((ARRAY ['NUMBER'::character varying, 'TEXT'::character varying])::text[]))
);

alter table sizes
    owner to postgres;

create table if not exists product_details
(
    quantity          integer not null,
    color_id          bigint  not null
        constraint fk5tcr8s5m0i3prlty9w0crocog
            references colors,
    product_detail_id bigint generated by default as identity
        primary key,
    product_id        bigint  not null
        constraint fknfvvq3meg4ha3u1bju9k4is3r
            references products,
    size_id           bigint  not null
        constraint fkccs28awcbxp3s7mjthrwcdwvn
            references sizes
);

alter table product_details
    owner to postgres;

create table if not exists users
(
    date_of_birth date,
    address_id    bigint
        unique
        constraint fke8vydtk7hf0y16bfm558sywbb
            references addresses,
    created_at    timestamp(6),
    updated_at    timestamp(6),
    user_id       bigint generated by default as identity
        primary key,
    phone_number  varchar(10)  not null,
    email         varchar(255) not null
        unique,
    gender        varchar(255)
        constraint users_gender_check
            check ((gender)::text = ANY ((ARRAY ['MALE'::character varying, 'FEMALE'::character varying])::text[])),
    name          varchar(255) not null,
    password      varchar(255) not null,
    role          varchar(255)
        constraint users_role_check
            check ((role)::text = ANY ((ARRAY ['USER'::character varying, 'ADMIN'::character varying])::text[]))
);

alter table users
    owner to postgres;

create table if not exists comments
(
    rating       real,
    comment_date timestamp(6),
    comment_id   bigint generated by default as identity
        primary key,
    created_at   timestamp(6),
    product_id   bigint
        constraint fk6uv0qku8gsu6x1r2jkrtqwjtn
            references products,
    updated_at   timestamp(6),
    user_id      bigint
        constraint fk8omq0tc18jd43bu5tjh6jvraq
            references users,
    text_content text
);

alter table comments
    owner to postgres;

create table if not exists comment_media
(
    comment_id       bigint not null
        constraint fkt8wo02jsyvj694xbvndwoknkp
            references comments,
    comment_media_id bigint generated by default as identity
        primary key,
    media_type       varchar(255)
        constraint comment_media_media_type_check
            check ((media_type)::text = ANY ((ARRAY ['IMAGE'::character varying, 'VIDEO'::character varying])::text[])),
    path             varchar(255)
);

alter table comment_media
    owner to postgres;

create table if not exists notification_read
(
    notification_id bigint not null
        constraint fkebhxa2jan0mu9air2lhwdl5qe
            references notifications,
    user_id         bigint not null
        constraint fkhggqhegtph0109s705vjpfqn
            references users,
    primary key (notification_id, user_id)
);

alter table notification_read
    owner to postgres;

create table if not exists orders
(
    delivery_amount   decimal(10, 2),
    discounted_amount decimal(10, 2),
    discounted_price  decimal(10, 2),
    original_amount   decimal(10, 2),
    address_id        bigint       not null
        constraint fkhlglkvf5i60dv6dn397ethgpt
            references addresses,
    created_at        timestamp(6),
    order_date        timestamp(6),
    updated_at        timestamp(6),
    user_id           bigint       not null
        constraint fk32ql8ubntj5uh44ph9659tiih
            references users,
    phone_number      varchar(10)  not null,
    buyer_name        varchar(255) not null,
    delivery_method   varchar(255)
        constraint orders_delivery_method_check
            check ((delivery_method)::text = ANY
                   ((ARRAY ['EXPRESS'::character varying, 'ECONOMY'::character varying])::text[])),
    note              text,
    order_id          varchar(255) not null
        primary key,
    order_status      varchar(255)
        constraint orders_order_status_check
            check ((order_status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'PROCESSING'::character varying, 'SHIPPED'::character varying, 'DELIVERED'::character varying, 'CANCELLED'::character varying])::text[])),
    payment_method    varchar(255) not null
        constraint orders_payment_method_check
            check ((payment_method)::text = ANY ((ARRAY ['COD'::character varying, 'CC'::character varying])::text[]))
);

alter table orders
    owner to postgres;

create table if not exists order_details
(
    amount            numeric(10, 2) not null,
    quantity          integer        not null,
    product_detail_id bigint         not null
        constraint fkl9w7hjxo9qo8s0glyr4ngkm1d
            references product_details,
    order_id          varchar(255)   not null
        constraint fkjyu2qbqt8gnvno9oe9j2s2ldk
            references orders,
    primary key (product_detail_id, order_id)
);

alter table order_details
    owner to postgres;

create table if not exists rooms_chat
(
    is_seen boolean,
    user_id bigint       not null
        constraint fke5boqesb75rfdksaac40moq4j
            references users,
    room_id varchar(255) not null
        primary key
);

alter table rooms_chat
    owner to postgres;

create table if not exists messages
(
    send_date    timestamp(6),
    message_id   varchar(255) not null
        primary key,
    message_type varchar(255)
        constraint messages_message_type_check
            check ((message_type)::text = ANY
                   ((ARRAY ['TEXT'::character varying, 'IMAGE'::character varying, 'VIDEO'::character varying])::text[])),
    receiver     varchar(255) not null,
    room_id      varchar(255)
        constraint fkg15gkrrbt45ogo3udesaofwcf
            references rooms_chat,
    sender       varchar(255) not null
);

alter table messages
    owner to postgres;

create table if not exists message_media
(
    message_media_id bigint generated by default as identity
        primary key,
    media_type       varchar(255)
        constraint message_media_media_type_check
            check ((media_type)::text = ANY ((ARRAY ['IMAGE'::character varying, 'VIDEO'::character varying])::text[])),
    message_id       varchar(255) not null
        constraint fk9dofr3ed1b29u3g5rkf4bgypi
            references messages,
    path             varchar(255)
);

alter table message_media
    owner to postgres;

create table if not exists tokens
(
    expired_date  timestamp(6),
    token_id      bigint generated by default as identity
        primary key,
    user_id       bigint
        constraint fk2dylsfo39lgjyqml2tbe0b0ss
            references users,
    access_token  varchar(255) not null
        unique,
    refresh_token varchar(255) not null
        unique
);

alter table tokens
    owner to postgres;

create table if not exists user_notifications
(
    is_seen         boolean,
    notification_id bigint not null
        constraint fkovvx0ab3h8s9lrm6fppuadn7d
            references notifications,
    user_id         bigint not null
        constraint fk9f86wonnl11hos1cuf5fibutl
            references users,
    primary key (notification_id, user_id)
);

alter table user_notifications
    owner to postgres;

create table if not exists vouchers
(
    discount     real,
    max_price    numeric(10, 2),
    min_amount   numeric(10, 2),
    quantity     integer,
    expired_date timestamp(6),
    voucher_id   bigint generated by default as identity
        primary key,
    scope        varchar(255)
        constraint vouchers_scope_check
            check ((scope)::text = ANY ((ARRAY ['ALL'::character varying, 'FOR_USER'::character varying])::text[])),
    voucher_type varchar(255)
        constraint vouchers_voucher_type_check
            check ((voucher_type)::text = ANY
                   ((ARRAY ['FOR_PRODUCT'::character varying, 'FOR_DELIVERY'::character varying])::text[]))
);

alter table vouchers
    owner to postgres;

create table if not exists order_vouchers
(
    voucher_id bigint       not null
        constraint fkdw65d1fy6feqn3ywydnipbkgc
            references vouchers,
    order_id   varchar(255) not null
        constraint fkkya6rv5ngvecp1qv0a9oifi1y
            references orders,
    primary key (voucher_id, order_id)
);

alter table order_vouchers
    owner to postgres;

create table if not exists user_vouchers
(
    is_used    boolean,
    user_id    bigint not null
        constraint fk90ahc2var0yrghyxr9tapdokg
            references users,
    voucher_id bigint not null
        constraint fk40ig7khk2v79rbqaj98mf1g2q
            references vouchers,
    primary key (user_id, voucher_id)
);

alter table user_vouchers
    owner to postgres;

create table if not exists voucher_usages
(
    usages_date timestamp(6),
    user_id     bigint not null
        constraint fkayocv8v53p94c3jr2ookjd4jq
            references users,
    voucher_id  bigint not null
        constraint fkguvf95urdn2namu0hgiasgttx
            references vouchers,
    primary key (user_id, voucher_id)
);

alter table voucher_usages
    owner to postgres;