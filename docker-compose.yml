version: '3.7'

services:
  postgres-db:
    container_name: postgres-db
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: avnadmin
      POSTGRES_PASSWORD: 123456
      PG_DATA: /data/postgres
      POSTGRES_DB: salesdb
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres:/data/postgres
    networks:
      - sales-app-network
    restart: unless-stopped
  postgres-admin:
    container_name: postgres-admin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - sales-app-network
    restart: unless-stopped
  #  mysql8-container:
  #    container_name: mysql8-container
  #    image: mysql:8.2.0
  #    restart: always
  #    environment:
  #      MYSQL_ROOT_PASSWORD: 123456
  #      MYSQL_DATABASE: salesdb
  #    ports:
  #      - "3306:3306"
  #    networks:
  #      - sales-app-network
  redis-container:
    container_name: redis-container
    image: docker.io/redis:7.2.3
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - sales-app-network
#  spring-container:
#    container_name: spring-container
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    environment:
#      REDIS_HOST: redis-container
#      REDIS_PORT: 6379
#    depends_on:
#      - postgres-db
#      - redis-container
#    networks:
#      - sales-app-network
networks:
  sales-app-network:
    driver: bridge
volumes:
  postgres:
  pgadmin:


# run service: docker-compose -f docker-compose.yml up -d container_name
# run all: docker-compose up -d